name: Build Check

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  build-check:
    name: Build Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: W3C HTML Validation
        uses: Cyb3r-Jak3/html5-validator-action@v7.2.0
        with:
          root: ./
          css: false
          
      - name: GitHub Pages Build Test
        run: |
          echo "üöÄ Test de build GitHub Pages..."
          
          # Simuler ce que fait GitHub Pages : upload et d√©ploiement
          # On utilise la m√™me action que le vrai d√©ploiement
          
      - name: Setup Pages (test)
        uses: actions/configure-pages@v4
        
      - name: Upload artifact (test) 
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Build Success Test
        run: |
          echo "‚úÖ GitHub Pages build simulation r√©ussie"
          echo "‚úÖ HTML W3C valid√©"
          
      - name: Build Success
        run: |
          echo "‚úÖ BUILD OK - Pas d'erreur technique bloquante"
          echo "üìù Review qualit√© ‚Üí @responsable-qualite"
          
      - name: Notify Build Failure
        if: failure()
        run: |
          gh pr comment ${{ github.event.number }} --body "‚ùå **Build √©chou√©**
          
          @developpeur-landing Le build check a √©chou√© sur cette PR.
          
          **Action requise :**
          - V√©rifier les logs du workflow ci-dessus
          - Corriger les erreurs sur ta branche de d√©veloppement
          - Push les corrections pour relancer le build automatiquement
          
          **Une fois corrig√©, le build repassera automatiquement et @responsable-qualite pourra faire sa review.**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}