name: Build Check

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  build-check:
    name: Build Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: HTML5 Validation
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: ./

      - name: Move to In Review
        if: success()
        run: |
          # Récupérer l'issue liée à la PR
          ISSUE_NUMBER=$(gh pr view ${{ github.event.number }} --json body --jq '.body' | grep -o '#[0-9]\+' | head -1 | sed 's/#//')
          if [ ! -z "$ISSUE_NUMBER" ]; then
            # Récupérer le premier projet
            FIRST_PROJECT=$(gh project list --owner "${{ github.repository_owner }}" | head -1 | cut -f1)
            # Déplacer l'issue vers "In Review"
            gh project item-edit --project-id $FIRST_PROJECT --id $(gh issue view $ISSUE_NUMBER --json projectItems --jq '.projectItems[0].id') --field-id $(gh project field-list $FIRST_PROJECT | grep "Status" | cut -f1) --single-select-option-id "In Review"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Build Failure
        if: failure()
        run: |
          gh pr comment ${{ github.event.number }} --body "❌ **Build échoué**
          
          @developpeur-landing Le build check a échoué sur cette PR.
          
          **Action requise :**
          - Vérifier les logs du workflow ci-dessus
          - Corriger les erreurs sur ta branche de développement
          - Push les corrections pour relancer le build automatiquement
          
          **Une fois corrigé, le build repassera automatiquement et @responsable-qualite pourra faire sa review.**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}